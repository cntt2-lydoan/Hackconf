{"version":3,"sources":["../../js/foundation.sticky.js"],"names":["$","Sticky","element","options","$element","extend","defaults","data","_init","Foundation","registerPlugin","$parent","parent","id","GetYoDigits","_this","length","wasWrapped","$container","container","wrapInner","addClass","containerClass","stickyClass","attr","scrollCount","checkEvery","isStuck","window","one","anchor","$anchor","_parsePoints","_setSizes","_calc","_events","split","reverse","join","top","topAnchor","btm","btmAnchor","document","documentElement","scrollHeight","pts","breaks","i","len","pt","place","offset","toLowerCase","getBoundingClientRect","height","points","scrollListener","isOn","canStick","off","on","e","pageYOffset","el","_pauseListeners","trigger","checkSizes","scroll","_removeSticky","topPoint","bottomPoint","_setSticky","stickTo","mrgn","notStuckTo","css","left","parseInt","getComputedStyle","removeClass","isTop","stickToTop","anchorPt","anchorHeight","elemHeight","topOrBottom","cb","MediaQuery","atLeast","stickyOn","newElemWidth","width","comp","pdng","newContainerHeight","containerHeight","_setBreakPoints","mTop","emCalc","marginTop","mBtm","marginBottom","winHeight","innerHeight","bottom","unwrap","unregisterPlugin","em","body","fontSize","plugin","jQuery"],"mappings":"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","file":"foundation.sticky.js","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * Sticky module.\n * @module foundation.sticky\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nclass Sticky {\n  /**\n   * Creates a new instance of a sticky thing.\n   * @class\n   * @param {jQuery} element - jQuery object to make sticky.\n   * @param {Object} options - options object passed when creating the element programmatically.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Sticky');\n  }\n\n  /**\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n   * @function\n   * @private\n   */\n  _init() {\n    var $parent = this.$element.parent('[data-sticky-container]'),\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n        _this = this;\n\n    if (!$parent.length) {\n      this.wasWrapped = true;\n    }\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n    this.$container.addClass(this.options.containerClass);\n\n    this.$element.addClass(this.options.stickyClass)\n                 .attr({'data-resize': id});\n\n    this.scrollCount = this.options.checkEvery;\n    this.isStuck = false;\n    $(window).one('load.zf.sticky', function(){\n      if(_this.options.anchor !== ''){\n        _this.$anchor = $('#' + _this.options.anchor);\n      }else{\n        _this._parsePoints();\n      }\n\n      _this._setSizes(function(){\n        _this._calc(false);\n      });\n      _this._events(id.split('-').reverse().join('-'));\n    });\n  }\n\n  /**\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n   * @function\n   * @private\n   */\n  _parsePoints() {\n    var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n        btm = this.options.btmAnchor== \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n        pts = [top, btm],\n        breaks = {};\n    for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n      var pt;\n      if (typeof pts[i] === 'number') {\n        pt = pts[i];\n      } else {\n        var place = pts[i].split(':'),\n            anchor = $(`#${place[0]}`);\n\n        pt = anchor.offset().top;\n        if (place[1] && place[1].toLowerCase() === 'bottom') {\n          pt += anchor[0].getBoundingClientRect().height;\n        }\n      }\n      breaks[i] = pt;\n    }\n\n\n    this.points = breaks;\n    return;\n  }\n\n  /**\n   * Adds event handlers for the scrolling element.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.\n   */\n  _events(id) {\n    var _this = this,\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\n    if (this.isOn) { return; }\n    if (this.canStick) {\n      this.isOn = true;\n      $(window).off(scrollListener)\n               .on(scrollListener, function(e) {\n                 if (_this.scrollCount === 0) {\n                   _this.scrollCount = _this.options.checkEvery;\n                   _this._setSizes(function() {\n                     _this._calc(false, window.pageYOffset);\n                   });\n                 } else {\n                   _this.scrollCount--;\n                   _this._calc(false, window.pageYOffset);\n                 }\n              });\n    }\n\n    this.$element.off('resizeme.zf.trigger')\n                 .on('resizeme.zf.trigger', function(e, el) {\n                     _this._setSizes(function() {\n                       _this._calc(false);\n                       if (_this.canStick) {\n                         if (!_this.isOn) {\n                           _this._events(id);\n                         }\n                       } else if (_this.isOn) {\n                         _this._pauseListeners(scrollListener);\n                       }\n                     });\n    });\n  }\n\n  /**\n   * Removes event handlers for scroll and change events on anchor.\n   * @fires Sticky#pause\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n   */\n  _pauseListeners(scrollListener) {\n    this.isOn = false;\n    $(window).off(scrollListener);\n\n    /**\n     * Fires when the plugin is paused due to resize event shrinking the view.\n     * @event Sticky#pause\n     * @private\n     */\n     this.$element.trigger('pause.zf.sticky');\n  }\n\n  /**\n   * Called on every `scroll` event and on `_init`\n   * fires functions based on booleans and cached values\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n   */\n  _calc(checkSizes, scroll) {\n    if (checkSizes) { this._setSizes(); }\n\n    if (!this.canStick) {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n      return false;\n    }\n\n    if (!scroll) { scroll = window.pageYOffset; }\n\n    if (scroll >= this.topPoint) {\n      if (scroll <= this.bottomPoint) {\n        if (!this.isStuck) {\n          this._setSticky();\n        }\n      } else {\n        if (this.isStuck) {\n          this._removeSticky(false);\n        }\n      }\n    } else {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n    }\n  }\n\n  /**\n   * Causes the $element to become stuck.\n   * Adds `position: fixed;`, and helper classes.\n   * @fires Sticky#stuckto\n   * @function\n   * @private\n   */\n  _setSticky() {\n    var _this = this,\n        stickTo = this.options.stickTo,\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n        css = {};\n\n    css[mrgn] = `${this.options[mrgn]}em`;\n    css[stickTo] = 0;\n    css[notStuckTo] = 'auto';\n    css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n    this.isStuck = true;\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\n                 .addClass(`is-stuck is-at-${stickTo}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become `position: fixed;`\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n                  * @event Sticky#stuckto\n                  */\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\n    this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function() {\n      _this._setSizes();\n    });\n  }\n\n  /**\n   * Causes the $element to become unstuck.\n   * Removes `position: fixed;`, and helper classes.\n   * Adds other helper classes.\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n   * @fires Sticky#unstuckfrom\n   * @private\n   */\n  _removeSticky(isTop) {\n    var stickTo = this.options.stickTo,\n        stickToTop = stickTo === 'top',\n        css = {},\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickToTop ? 'bottom' : 'top',\n        topOrBottom = isTop ? 'top' : 'bottom';\n\n    css[mrgn] = 0;\n\n    css['bottom'] = 'auto';\n    if(isTop) {\n      css['top'] = 0;\n    } else {\n      css['top'] = anchorPt;\n    }\n\n    css['left'] = '';\n    this.isStuck = false;\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become anchored.\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n                  * @event Sticky#unstuckfrom\n                  */\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\n  }\n\n  /**\n   * Sets the $element and $container sizes for plugin.\n   * Calls `_setBreakPoints`.\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n   * @private\n   */\n  _setSizes(cb) {\n    this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n    if (!this.canStick) { cb(); }\n    var _this = this,\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\n        comp = window.getComputedStyle(this.$container[0]),\n        pdng = parseInt(comp['padding-right'], 10);\n\n    if (this.$anchor && this.$anchor.length) {\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n    } else {\n      this._parsePoints();\n    }\n\n    this.$element.css({\n      'max-width': `${newElemWidth - pdng}px`\n    });\n\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n    if (this.$element.css(\"display\") == \"none\") {\n      newContainerHeight = 0;\n    }\n    this.containerHeight = newContainerHeight;\n    this.$container.css({\n      height: newContainerHeight\n    });\n    this.elemHeight = newContainerHeight;\n\n  \tif (this.isStuck) {\n  \t\tthis.$element.css({\"left\":this.$container.offset().left + parseInt(comp['padding-left'], 10)});\n  \t}\n\n    this._setBreakPoints(newContainerHeight, function() {\n      if (cb) { cb(); }\n    });\n  }\n\n  /**\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n   * @param {Function} cb - optional callback function to be called on completion.\n   * @private\n   */\n  _setBreakPoints(elemHeight, cb) {\n    if (!this.canStick) {\n      if (cb) { cb(); }\n      else { return false; }\n    }\n    var mTop = emCalc(this.options.marginTop),\n        mBtm = emCalc(this.options.marginBottom),\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n    if (this.options.stickTo === 'top') {\n      topPoint -= mTop;\n      bottomPoint -= (elemHeight + mTop);\n    } else if (this.options.stickTo === 'bottom') {\n      topPoint -= (winHeight - (elemHeight + mBtm));\n      bottomPoint -= (winHeight - mBtm);\n    } else {\n      //this would be the stickTo: both option... tricky\n    }\n\n    this.topPoint = topPoint;\n    this.bottomPoint = bottomPoint;\n\n    if (cb) { cb(); }\n  }\n\n  /**\n   * Destroys the current sticky element.\n   * Resets the element to the top position first.\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n   * @function\n   */\n  destroy() {\n    this._removeSticky(true);\n\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\n                 .css({\n                   height: '',\n                   top: '',\n                   bottom: '',\n                   'max-width': ''\n                 })\n                 .off('resizeme.zf.trigger');\n    if (this.$anchor && this.$anchor.length) {\n      this.$anchor.off('change.zf.sticky');\n    }\n    $(window).off(this.scrollListener);\n\n    if (this.wasWrapped) {\n      this.$element.unwrap();\n    } else {\n      this.$container.removeClass(this.options.containerClass)\n                     .css({\n                       height: ''\n                     });\n    }\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSticky.defaults = {\n  /**\n   * Customizable container template. Add your own classes for styling and sizing.\n   * @option\n   * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n   */\n  container: '<div data-sticky-container></div>',\n  /**\n   * Location in the view the element sticks to.\n   * @option\n   * @example 'top'\n   */\n  stickTo: 'top',\n  /**\n   * If anchored to a single element, the id of that element.\n   * @option\n   * @example 'exampleId'\n   */\n  anchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the top anchor.\n   * @option\n   * @example 'exampleId:top'\n   */\n  topAnchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the bottom anchor.\n   * @option\n   * @example 'exampleId:bottom'\n   */\n  btmAnchor: '',\n  /**\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginTop: 1,\n  /**\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginBottom: 1,\n  /**\n   * Breakpoint string that is the minimum screen size an element should become sticky.\n   * @option\n   * @example 'medium'\n   */\n  stickyOn: 'medium',\n  /**\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n   * @option\n   * @example 'sticky'\n   */\n  stickyClass: 'sticky',\n  /**\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\n   * @option\n   * @example 'sticky-container'\n   */\n  containerClass: 'sticky-container',\n  /**\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n   * @option\n   * @example 50\n   */\n  checkEvery: -1\n};\n\n/**\n * Helper function to calculate em values\n * @param Number {em} - number of em's to calculate into pixels\n */\nfunction emCalc(em) {\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n}\n\n// Window exports\nFoundation.plugin(Sticky, 'Sticky');\n\n}(jQuery);\n"]}