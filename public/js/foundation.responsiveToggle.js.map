{"version":3,"sources":["../../js/foundation.responsiveToggle.js"],"names":["$","ResponsiveToggle","element","options","$element","extend","defaults","data","_init","_events","Foundation","registerPlugin","targetID","console","error","$targetMenu","$toggler","find","_update","_this","_updateMqHandler","bind","window","on","toggleMenu","MediaQuery","atLeast","hideFor","show","hide","toggle","trigger","off","unregisterPlugin","plugin","jQuery"],"mappings":"AAAA;;;;;;AAEA,CAAC,UAASA,CAAT,EAAY;;AAEb;;;;;;AAFa,MAQPC,gBARO;AASX;;;;;;;AAOA,8BAAYC,OAAZ,EAAqBC,OAArB,EAA8B;AAAA;;AAC5B,WAAKC,QAAL,GAAgBJ,EAAEE,OAAF,CAAhB;AACA,WAAKC,OAAL,GAAeH,EAAEK,MAAF,CAAS,EAAT,EAAaJ,iBAAiBK,QAA9B,EAAwC,KAAKF,QAAL,CAAcG,IAAd,EAAxC,EAA8DJ,OAA9D,CAAf;;AAEA,WAAKK,KAAL;AACA,WAAKC,OAAL;;AAEAC,iBAAWC,cAAX,CAA0B,IAA1B,EAAgC,kBAAhC;AACD;;AAED;;;;;;;AA1BW;AAAA;AAAA,8BA+BH;AACN,YAAIC,WAAW,KAAKR,QAAL,CAAcG,IAAd,CAAmB,mBAAnB,CAAf;AACA,YAAI,CAACK,QAAL,EAAe;AACbC,kBAAQC,KAAR,CAAc,kEAAd;AACD;;AAED,aAAKC,WAAL,GAAmBf,QAAMY,QAAN,CAAnB;AACA,aAAKI,QAAL,GAAgB,KAAKZ,QAAL,CAAca,IAAd,CAAmB,eAAnB,CAAhB;;AAEA,aAAKC,OAAL;AACD;;AAED;;;;;;AA3CW;AAAA;AAAA,gCAgDD;AACR,YAAIC,QAAQ,IAAZ;;AAEA,aAAKC,gBAAL,GAAwB,KAAKF,OAAL,CAAaG,IAAb,CAAkB,IAAlB,CAAxB;;AAEArB,UAAEsB,MAAF,EAAUC,EAAV,CAAa,uBAAb,EAAsC,KAAKH,gBAA3C;;AAEA,aAAKJ,QAAL,CAAcO,EAAd,CAAiB,2BAAjB,EAA8C,KAAKC,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAA9C;AACD;;AAED;;;;;;AA1DW;AAAA;AAAA,gCA+DD;AACR;AACA,YAAI,CAACX,WAAWe,UAAX,CAAsBC,OAAtB,CAA8B,KAAKvB,OAAL,CAAawB,OAA3C,CAAL,EAA0D;AACxD,eAAKvB,QAAL,CAAcwB,IAAd;AACA,eAAKb,WAAL,CAAiBc,IAAjB;AACD;;AAED;AALA,aAMK;AACH,iBAAKzB,QAAL,CAAcyB,IAAd;AACA,iBAAKd,WAAL,CAAiBa,IAAjB;AACD;AACF;;AAED;;;;;;AA7EW;AAAA;AAAA,mCAkFE;AACX,YAAI,CAAClB,WAAWe,UAAX,CAAsBC,OAAtB,CAA8B,KAAKvB,OAAL,CAAawB,OAA3C,CAAL,EAA0D;AACxD,eAAKZ,WAAL,CAAiBe,MAAjB,CAAwB,CAAxB;;AAEA;;;;AAIA,eAAK1B,QAAL,CAAc2B,OAAd,CAAsB,6BAAtB;AACD;AACF;AA5FU;AAAA;AAAA,gCA8FD;AACR,aAAK3B,QAAL,CAAc4B,GAAd,CAAkB,sBAAlB;AACA,aAAKhB,QAAL,CAAcgB,GAAd,CAAkB,sBAAlB;;AAEAhC,UAAEsB,MAAF,EAAUU,GAAV,CAAc,uBAAd,EAAuC,KAAKZ,gBAA5C;;AAEAV,mBAAWuB,gBAAX,CAA4B,IAA5B;AACD;AArGU;;AAAA;AAAA;;AAwGbhC,mBAAiBK,QAAjB,GAA4B;AAC1B;;;;;AAKAqB,aAAS;AANiB,GAA5B;;AASA;AACAjB,aAAWwB,MAAX,CAAkBjC,gBAAlB,EAAoC,kBAApC;AAEC,CApHA,CAoHCkC,MApHD,CAAD","file":"foundation.responsiveToggle.js","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n\nclass ResponsiveToggle {\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\n  }\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  _init() {\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $(`#${targetID}`);\n    this.$toggler = this.$element.find('[data-toggle]');\n\n    this._update();\n  }\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this._updateMqHandler = this._update.bind(this);\n    \n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  }\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  _update() {\n    // Mobile\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n      this.$element.hide();\n      this.$targetMenu.show();\n    }\n  }\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  toggleMenu() {   \n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$targetMenu.toggle(0);\n\n      /**\n       * Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled\n       */\n      this.$element.trigger('toggled.zf.responsiveToggle');\n    }\n  };\n\n  destroy() {\n    this.$element.off('.zf.responsiveToggle');\n    this.$toggler.off('.zf.responsiveToggle');\n    \n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n    \n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @example 'medium'\n   */\n  hideFor: 'medium'\n};\n\n// Window exports\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n\n}(jQuery);\n"]}