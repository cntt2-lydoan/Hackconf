{"version":3,"sources":["../../js/foundation.util.mediaQuery.js"],"names":["$","defaultQueries","landscape","portrait","retina","MediaQuery","queries","current","_init","self","extractedStyles","css","namedQueries","parseStyleToObject","key","hasOwnProperty","push","name","value","_getCurrentSize","_watcher","atLeast","size","query","get","window","matchMedia","matches","i","matched","length","on","newSize","currentSize","trigger","Foundation","styleMedia","media","style","document","createElement","script","getElementsByTagName","info","type","id","parentNode","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","width","str","styleObject","trim","slice","split","reduce","ret","param","parts","replace","val","decodeURIComponent","undefined","Array","isArray","jQuery"],"mappings":"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","file":"foundation.util.mediaQuery.js","sourcesContent":["'use strict';\n\n!function($) {\n\n// Default set of media queries\nconst defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n\n  current: '',\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      if(namedQueries.hasOwnProperty(key)) {\n        self.queries.push({\n          name: key,\n          value: `only screen and (min-width: ${namedQueries[key]})`\n        });\n      }\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n  },\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get(size) {\n    for (var i in this.queries) {\n      if(this.queries.hasOwnProperty(i)) {\n        var query = this.queries[i];\n        if (size === query.name) return query.value;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize() {\n    var matched;\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if (typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher() {\n    $(window).on('resize.zf.mediaquery', () => {\n      var newSize = this._getCurrentSize(), currentSize = this.current;\n\n      if (newSize !== currentSize) {\n        // Change the current media query\n        this.current = newSize;\n\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium(media) {\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    }\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  }\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\nFoundation.MediaQuery = MediaQuery;\n\n}(jQuery);\n"]}