{"version":3,"sources":["../../js/foundation.responsiveMenu.js"],"names":["$","ResponsiveMenu","element","options","$element","rules","data","currentMq","currentPlugin","_init","_events","Foundation","registerPlugin","rulesTree","split","i","length","rule","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","_this","window","on","matchedMq","each","key","MediaQuery","atLeast","plugin","value","removeClass","cssClass","addClass","destroy","off","unregisterPlugin","defaults","dropdown","_plugins","drilldown","accordion","jQuery"],"mappings":"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","file":"foundation.responsiveMenu.js","sourcesContent":["'use strict';\n\n!function($) {\n\n/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.accordionMenu\n * @requires foundation.util.drilldown\n * @requires foundation.util.dropdown-menu\n */\n\nclass ResponsiveMenu {\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveMenu');\n  }\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  _init() {\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n    if (typeof this.rules === 'string') {\n      let rulesTree = {};\n\n      // Parse rules from \"classes\" pulled from data attribute\n      let rules = this.rules.split(' ');\n\n      // Iterate through every rule found\n      for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i].split('-');\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n        if (MenuPlugins[rulePlugin] !== null) {\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n        }\n      }\n\n      this.rules = rulesTree;\n    }\n\n    if (!$.isEmptyObject(this.rules)) {\n      this._checkMediaQueries();\n    }\n  }\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  }\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  _checkMediaQueries() {\n    var matchedMq, _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function(key) {\n      if (Foundation.MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function(key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  }\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  destroy() {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveMenu.defaults = {};\n\n// The plugin matches the plugin classes with these plugin instances.\nvar MenuPlugins = {\n  dropdown: {\n    cssClass: 'dropdown',\n    plugin: Foundation._plugins['dropdown-menu'] || null\n  },\n drilldown: {\n    cssClass: 'drilldown',\n    plugin: Foundation._plugins['drilldown'] || null\n  },\n  accordion: {\n    cssClass: 'accordion-menu',\n    plugin: Foundation._plugins['accordion-menu'] || null\n  }\n};\n\n// Window exports\nFoundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n\n}(jQuery);\n"]}